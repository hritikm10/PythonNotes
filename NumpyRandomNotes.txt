Random Numbers in NumPy
---------------------------------
Random number does NOT mean a different number every time. Random means something that can not be predicted logically.
If there is a program to generate random number it can be predicted, thus it is not truly random.
Random numbers generated through a generation algorithm are called pseudo random.



#Generate a random integer from 0 to 100:
from numpy import random
x = random.randint(100)
print(x)


#Generate a random float from 0 to 1:
from numpy import random
x = random.rand()
print(x)


#Generate a 1-D array containing 5 random integers from 0 to 100:
from numpy import random
x=random.randint(100, size=(5))
print(x)


#Generate a 2-D array with 3 rows, each row containing 5 random integers from 0 to 100:
from numpy import random
x = random.randint(100, size=(3, 5))
print(x)


#Generate a 1-D array containing 5 random floats from 0 to 1:
from numpy import random
x = random.rand(5)
print(x)



#Return one of the values in an array:
from numpy import random
x = random.choice([3, 5, 7, 9])
print(x)


#Generate a 2-D array that consists of the values in the array parameter (3, 5, 7, and 9):
from numpy import random
x = random.choice([3, 5, 7, 9], size=(3, 5))
print(x)



#What is Data Distribution?
---------------------------------
Data Distribution is a list of all possible values, and how often each value occurs.
Such lists are important when working with statistics and data science.
The random module offer methods that returns randomly generated data distributions.


#Generate a 1-D array containing 100 values, where each value has to be 3, 5, 7 or 9.
The probability for the value to be 3 is set to be 0.1
The probability for the value to be 5 is set to be 0.3
The probability for the value to be 7 is set to be 0.6
The probability for the value to be 9 is set to be 0


from numpy import random
x = random.choice([3, 5, 7, 9], p=[0.1, 0.3, 0.6, 0.0], size=(100))
print(x)



#Same example as above, but return a 2-D array with 3 rows, each containing 5 values.
from numpy import random
x = random.choice([3, 5, 7, 9], p=[0.1, 0.3, 0.6, 0.0], size=(3, 5))
print(x)



#The NumPy Random module provides two methods for this: shuffle() and permutation()
The shuffle() method makes changes to the original array.
The permutation() method returns a re-arranged array (and leaves the original array un-changed).



